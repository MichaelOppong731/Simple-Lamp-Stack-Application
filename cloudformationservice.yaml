{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The template used to create an ECS Service from the ECS Console.",
  "Parameters": {
    "ECSClusterName": {
      "Type": "String",
      "Default": "LampCluster"
    },
    "ECSServiceName": {
      "Type": "String",
      "Default": "LampStack-blue-green-deployment"
    },
    "SecurityGroupIDs": {
      "Type": "CommaDelimitedList",
      "Default": "sg-057b8dfe4cd6ef475"
    },
    "SubnetIDs": {
      "Type": "CommaDelimitedList",
      "Default": "subnet-07e5482eb17542d77,subnet-04190500e3e1c78f6,subnet-0fe68efa60099eb36"
    },
    "VpcID": {
      "Type": "String",
      "Default": "vpc-0e4b0eeb01937c91f"
    },
    "LoadBalancerName": {
      "Type": "String",
      "Default": "lampStackAppLB"
    },
    "ApplicationName": {
      "Type": "String",
      "Default": "AppECS-LampCluster-LampStack-blue-green-deployment"
    },
    "DeploymentGroupName": {
      "Type": "String",
      "Default": "DgpECS-LampCluster-LampStack-blue-green-deployment"
    }
  },
  "Resources": {
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": "LampCluster",
        "TaskDefinition": "arn:aws:ecs:eu-west-1:180294222815:task-definition/LampStack-app:1",
        "LaunchType": "FARGATE",
        "ServiceName": "LampStack-blue-green-deployment",
        "SchedulingStrategy": "REPLICA",
        "DesiredCount": 1,
        "AvailabilityZoneRebalancing": "ENABLED",
        "LoadBalancers": [
          {
            "ContainerName": "LampstackApplication",
            "ContainerPort": 80,
            "LoadBalancerName": {
              "Ref": "AWS::NoValue"
            },
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": {
              "Ref": "SecurityGroupIDs"
            },
            "Subnets": {
              "Ref": "SubnetIDs"
            }
          }
        },
        "PlatformVersion": "LATEST",
        "DeploymentController": {
          "Type": "CODE_DEPLOY"
        },
        "ServiceConnectConfiguration": {
          "Enabled": false
        },
        "Tags": [],
        "EnableECSManagedTags": true
      },
      "DependsOn": [
        "Listener"
      ]
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Type": "application",
        "Name": "lampStackAppLB",
        "SecurityGroups": {
          "Ref": "SecurityGroupIDs"
        },
        "Subnets": {
          "Ref": "SubnetIDs"
        }
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/",
        "Name": "tg-LampCl-LampStack-blue-green-d",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "HealthCheckProtocol": "HTTP",
        "VpcId": {
          "Ref": "VpcID"
        },
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "300"
          }
        ]
      }
    },
    "Listener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancer"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "TargetGroupTwo": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/",
        "Name": "tg-LampCl-LampStack-blue-green-2",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "HealthCheckProtocol": "HTTP",
        "VpcId": {
          "Ref": "VpcID"
        },
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "300"
          }
        ]
      }
    },
    "AutoScalingTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": "2",
        "MinCapacity": "1",
        "ResourceId": "service/LampCluster/LampStack-blue-green-deployment",
        "RoleARN": "arn:aws:iam::180294222815:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "DependsOn": [
        "ECSService"
      ]
    },
    "AutoScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "cpu_utilization",
        "PolicyType": "TargetTrackingScaling",
        "ResourceId": "service/LampCluster/LampStack-blue-green-deployment",
        "ScalingTargetId": {
          "Ref": "AutoScalingTarget"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "DisableScaleIn": false,
          "ScaleInCooldown": "300",
          "ScaleOutCooldown": "300",
          "TargetValue": "70",
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          }
        }
      }
    },
    "CodeDeployDeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "ApplicationName"
        },
        "DeploymentGroupName": {
          "Ref": "DeploymentGroupName"
        },
        "DeploymentConfigName": "CodeDeployDefault.ECSAllAtOnce",
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_REQUEST"
          ]
        },
        "BlueGreenDeploymentConfiguration": {
          "DeploymentReadyOption": {
            "ActionOnTimeout": "CONTINUE_DEPLOYMENT",
            "WaitTimeInMinutes": 0
          },
          "TerminateBlueInstancesOnDeploymentSuccess": {
            "Action": "TERMINATE",
            "TerminationWaitTimeInMinutes": 60
          }
        },
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        },
        "LoadBalancerInfo": {
          "TargetGroupPairInfoList": [
            {
              "ProdTrafficRoute": {
                "ListenerArns": [
                  {
                    "Fn::GetAtt": [
                      "Listener",
                      "ListenerArn"
                    ]
                  }
                ]
              },
              "TargetGroups": [
                {
                  "Name": {
                    "Fn::GetAtt": [
                      "TargetGroup",
                      "TargetGroupName"
                    ]
                  }
                },
                {
                  "Name": {
                    "Fn::GetAtt": [
                      "TargetGroupTwo",
                      "TargetGroupName"
                    ]
                  }
                }
              ]
            }
          ]
        },
        "ServiceRoleArn": "arn:aws:iam::180294222815:role/ECS_CodeDeploy_role",
        "ECSServices": [
          {
            "ClusterName": {
              "Ref": "ECSClusterName"
            },
            "ServiceName": {
              "Ref": "ECSServiceName"
            }
          }
        ],
        "Tags": []
      },
      "DependsOn": [
        "CodeDeployApplication"
      ]
    },
    "CodeDeployApplication": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": {
          "Ref": "ApplicationName"
        },
        "ComputePlatform": "ECS",
        "Tags": []
      },
      "DependsOn": [
        "ECSService"
      ]
    }
  },
  "Outputs": {
    "ClusterName": {
      "Description": "The cluster used to create the service.",
      "Value": {
        "Ref": "ECSClusterName"
      }
    },
    "ECSService": {
      "Description": "The created service.",
      "Value": {
        "Ref": "ECSService"
      }
    },
    "LoadBalancer": {
      "Description": "The created load balancer.",
      "Value": {
        "Ref": "LoadBalancer"
      }
    },
    "Listener": {
      "Description": "The created listener.",
      "Value": {
        "Ref": "Listener"
      }
    },
    "TargetGroup": {
      "Description": "The created target group.",
      "Value": {
        "Ref": "TargetGroup"
      }
    },
    "CodeDeployDeploymentGroup": {
      "Description": "The created CodeDeploy deployment group.",
      "Value": {
        "Ref": "CodeDeployDeploymentGroup"
      }
    },
    "CodeDeployApplication": {
      "Description": "The created CodeDeploy application.",
      "Value": {
        "Ref": "CodeDeployApplication"
      }
    },
    "TargetGroupTwo": {
      "Description": "The created target group 2.",
      "Value": {
        "Ref": "TargetGroupTwo"
      }
    },
    "AutoScalingTarget": {
      "Value": {
        "Ref": "AutoScalingTarget"
      }
    },
    "AutoScalingPolicy": {
      "Value": {
        "Ref": "AutoScalingPolicy"
      }
    }
  }
}